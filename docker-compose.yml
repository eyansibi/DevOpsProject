version: "3.8"

services:
  mysqldb:
    image: mysql:5.7  # Vous utilisez MySQL 5.7 dans votre projet
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=kaddemdb
    ports:
      - "3307:3306"  # Gardez 3307 pour éviter les conflits avec d'autres instances MySQL
    volumes:
      - db:/var/lib/mysql
    networks:
      - kaddem_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    depends_on:
      mysqldb:
        condition: service_healthy
    image: eyansibi/eyansibidevops4twin2:${BACKEND_TAG:-latest}  # Utilisez votre image
    restart: on-failure
    ports:
      - "8089:8089"  # Port adapté à votre projet
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/kaddemdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&max_allowed_packet=15728640
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    stdin_open: true
    tty: true
    networks:
      - kaddem_network
    container_name: kaddem-backend

  mysqld-exporter:
    image: prom/mysqld-exporter:latest
    ports:
      - "9104:9104"
    environment:
      - DATA_SOURCE_NAME="root:root@(mysqldb:3306)/kaddemdb"
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
      - kaddem_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: kaddem-prometheus  # Nom unique pour éviter les conflits
    ports:
      - "9091:9090"  # Port modifié pour éviter le conflit avec l'existant (9090)
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kaddem_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"  # Port modifié pour éviter le conflit avec l'existant (3000)
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - kaddem_network
    restart: unless-stopped

volumes:
  db:

networks:
  kaddem_network:
    driver: bridge
